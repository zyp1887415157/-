package com.lanou3g.知识点;

public class Main {
    /*
    构造方法:方法名与类名相同,没有返回值类型;
    如果一个类中没有构造方法,那么会有一个隐藏的默认构造方法
    创建对象的时候会调用构造方法
    如果来中定义了带参数的构造方法,那么默认的就会消失
    构造方法是可以重载的(无参跟有参就是重载)


   创建对象的公式
   类名   对象名 = new  构造方法();


   方法的构成:
   0个或多个修饰符  返回值类型 方法名(参数列表){
   方法体:
   }

   static 修饰的方法可以直接使用  类名.方法  调用
   普通方法可以调用静态方法,静态方法不能调用普通方法,只能调用静态方法(同一个类中不可以)
   在创建对象的时候,会先加载类,然后在创建对象,静态方法优先于对象被创建出来,
   所以普通方法可以调用静态方法,静态方法调用普通方法时还没有对象,调用不到普通方法

   static  修饰的变量,被所有对象共享

   被static  修饰的属性/方法  属于类不属于对象,所以可以直接通过类名调用

   什么时候使用静态方法?
   1.当方法中不需要引用成员变量的时候(全局变量),这个方法可以声明为静态方法
   2.工具方法一般都会声明为静态方法




   常用类:
   1.可变字符串
   在多线程情况下 优先使用StringBuffer,因为它是线程安全的
   单线程情况下优先使用StringBuilder,因为效率高
   两种用法一样
   2.Math
   Math这个类提供了一些常用的数学计算方法
   3.时间日期相关类


   正则表达式
   作用:
   1.用来判断某个字符串是不是符合某个规则
   2.在某个字符串中查找某个规则的子串


   继承:
   在java中 如果父类没有明确指定父类类型,那么他就继承Object这个类
   java中类是单继承的,就是说 一个类同时只能继承一个类
    如果父类的属性是private,那么子类不能直接调用该属性,
    但是可以通过父类的getter&setter方法 间接的使用该属性

    在创建一个对象的时候,调用构造方法时,
   一定会先调用父类的构造方法

   方法的重写:
    在子类中把可以继承过来的方法重新声明一遍
    访问权限不能比父类的更严格



   final  关键字
        他可以修饰类/方法/属性,
        修饰类,那么该类不能被继承;
        修饰方法,那么该方法不能被重写;
        修饰属性,那么该属性的值不能被改变


        /*
            多态的原则:
                当调用某个对象的某个方法时,
                系统会看这个对象的真实类型是什么,
                调用的永远都是这个真实对象的方法.


                多态的表现形式:
                    1. 父类声明对象 由子类初始化(创建对象).
                    2. 如果一个方法的参数中,需要传递某个类型的参数,
                       那么该类型的子类对象都可以进行传递.
                    3. 如果一个方法的返回值是某个类型,
                       那么该类型的所有子类对象都可以作为返回值.
         */
        /*
           多态存在的三个必要条件
           继承
           重写(构造方法不能被重写)
           父类引用指向子类对象
           好处:  可替换性,可扩充性,简化性,灵活性,接口性


           多态的表现形式:
           1.父类声明对象,由子类创建对象(初始化)
           2.如果一个方法的参数中,需要传递某一个类型的参数,那么该类型的子类对象都可以进行传递
           3.如果一个方法的返回值是某个类型,那么该类型的所有子类对象都可以作为返回值
         */

}
