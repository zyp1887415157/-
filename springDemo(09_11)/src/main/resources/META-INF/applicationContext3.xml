<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">


    <!--标签bean的属性init-method 表示该类的init方法,调用时机是创建之后立即调用,
    属性destroy-method  表示该类的destroy方法,调用时机是最后销毁的时候
    生命周期:
    create init  service  destroy
    单例:属性scope,设置成prototype,就是非单例,默认是singleton
    加载方式:如果scope是singleton,及单例模式,使用属性lazy-init

    总结:
    我们可以使用参数init-method和destroy-method,来配置类初始化和销毁时的方法
    可以使用scope来配置单例,默认是单例;
    可以使用lazy-init来配置加载时机,默认是加载配置文件的时候加载bean
    -->
    <!--<bean id="dog" class="com.lanou.java.test5.Dog" init-method="initDog" destroy-method="destroyDog">-->

    <!--</bean>-->
    <bean id="dog" class="com.lanou.java.test5.Dog" scope="singleton" lazy-init="true"  >

    </bean>

    <bean id="dogg" class="com.lanou.java.test5.Dog"   >
        <property name="name" value="tom"></property>
        <property name="age" value="3"></property>
    </bean>



</beans>